@model PetSuppliesPlus.Models.ChangePasswordModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="table-responsive table-bg">
    <h1>Change Password </h1>
    <div class="col-md-12 col-sm-12">

        <div class="alert alert-error" style="display: none;">
            <button class="close" type="button">
                ×
            </button>
            <ul>
                <li><strong id="error-messgae"></strong></li>
            </ul>
        </div>
        <div class="alert alert-success" style="display: none;">
            <button data-dismiss="alert" class="close" type="button">
                ×
            </button>
            <ul>
                <li><strong id="success-messgae"></strong></li>
            </ul>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.CurrentPassword, new { @placeholder = "Current Password", @class = "form-control", type = "password" })
                        @Html.ValidationMessageFor(m => m.CurrentPassword)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.NewPassword, new { @placeholder = "New Password", @class = "form-control", type = "password" })
                        @Html.ValidationMessageFor(m => m.NewPassword)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.ConfirmPassword, new { @placeholder = "Confirm Password", @class = "form-control", type = "password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <input type="button" value="Submit" class="btn btn-default" onclick="doChange()" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section scripts
{
    <script type="text/javascript">
        function clear() {
            $('#CurrentPassword').val('');
            $('#NewPassword').val('');
            $('#ConfirmPassword').val('');
        }

        function doChange() {
            $('.alert-success').slideUp();
            $('.alert-error').slideUp();
            if ($('form').valid()) {
                var data = $('form');
                $.ajax({
                    cache: false,
                    async: true,
                    url: '@Url.Action("ChangePassword", "MyAccount")',
                    type: 'POST',
                    data: data.serialize(),
                    dataType: 'json',
                    success: function (data) {
                        if (data.Status == 0) {
                            $('#success-messgae').html(data.Message);
                            $('.alert-success').slideDown();
                            clear();
                        }
                        else {
                            $('#error-messgae').html(data.Message);
                            $('.alert-error').slideDown();
                        }
                    },
                    error: function (data) {
                    },
                    beforeSend: function () {
                        $('.wait-pupup').fadeIn();
                    },
                    complete: function () {
                        $('.wait-pupup').fadeOut();
                    }
                });
            }
        }
    </script>
}
